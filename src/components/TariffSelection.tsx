// components/TariffSelection.tsx
'use client';
import { useState } from 'react';
import styles from '../styles/tarif.module.css';

interface Tariff {
  id: string;
  name: string;
  price: number;
  time: string;
  icon: string;
}

interface TariffSelectionProps {
  startAddress: string;
  endAddress: string;
  onBack: () => void;
  onOrder: (tariffId: string) => void;
}

export default function TariffSelection({ 
  startAddress, 
  endAddress, 
  onBack,
  onOrder
}: TariffSelectionProps) {
  const [selectedTariff, setSelectedTariff] = useState<string>('econom');
  const [paymentMethod, setPaymentMethod] = useState<'cash' | 'card'>('cash');
  const [specialRequests, setSpecialRequests] = useState<string[]>([]);

  // –ó–∞–≥–ª—É—à–∫–∞ —Ç–∞—Ä–∏—Ñ–æ–≤ (–≤ —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –±—É–¥–µ–º –ø–æ–ª—É—á–∞—Ç—å —á–µ—Ä–µ–∑ API)
  const tariffs: Tariff[] = [
    { id: 'econom', name: '–≠–ö–û–ù–û–ú', price: 235, time: '5-7 –º–∏–Ω', icon: 'üöï' },
    { id: 'comfort', name: '–ö–û–ú–§–û–†–¢', price: 335, time: '3-5 –º–∏–Ω', icon: 'üöô' },
    { id: 'comfort_plus', name: '–ö–û–ú–§–û–†–¢+', price: 435, time: '2-4 –º–∏–Ω', icon: 'üöò' }
  ];

  const specialOptions = [
    { id: 'child_seat', name: '–î–µ—Ç—Å–∫–æ–µ –∫—Ä–µ—Å–ª–æ', price: 50 },
    { id: 'pet', name: '–ü–µ—Ä–µ–≤–æ–∑–∫–∞ –∂–∏–≤–æ—Ç–Ω–æ–≥–æ', price: 100 },
    { id: 'luggage', name: '–ë–æ–ª—å—à–æ–π –±–∞–≥–∞–∂', price: 70 }
  ];

  const toggleSpecialRequest = (id: string) => {
    if (specialRequests.includes(id)) {
      setSpecialRequests(specialRequests.filter(item => item !== id));
    } else {
      setSpecialRequests([...specialRequests, id]);
    }
  };

  const handleOrder = () => {
    // –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –±—É–¥–µ–º –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –¥–∞–Ω–Ω—ã–µ –Ω–∞ —Å–µ—Ä–≤–µ—Ä
    let total_price = tariffs.find(t => t.id === selectedTariff)?.price || 0

    specialOptions.map((j) => {
      total_price += j.price;  
    } );  
    
    const orderData = {
      startAddress,
      endAddress,
      tariff: selectedTariff,
      paymentMethod,
      specialRequests,
      totalPrice:  total_price
    };
    
    console.log('Order data:', orderData);
    onOrder(selectedTariff);
  };

  return (
    <div className={styles.tariffContainer}>
      {/* –ö–Ω–æ–ø–∫–∞ –Ω–∞–∑–∞–¥ */}
      <button className={styles.backButton} onClick={onBack}>
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none">
          <path d="M15 18L9 12L15 6" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"/>
        </svg>
      </button>

      {/* –ê–¥—Ä–µ—Å–∞ –ø–æ–µ–∑–¥–∫–∏ */}
      <div className={styles.routeAddresses}>
      <div className={styles.addressPoint}>
        <div className={styles.addressMarker}>A</div>
        <div className={styles.addressText}>
          {startAddress.length > 30 
            ? startAddress.substring(0, 30) + '...' 
            : startAddress}
        </div>
      </div>
      <div className={styles.addressPoint}>
        <div className={styles.addressMarker}>–ë</div>
        <div className={styles.addressText}>
          {endAddress.length > 30
            ? endAddress.substring(0, 30) + '...' 
            : endAddress}
        </div>
      </div>
    </div>

      {/* –í—ã–±–æ—Ä —Ç–∞—Ä–∏—Ñ–∞ */}
      <div className={styles.tariffGrid}>
        {tariffs.map(tariff => (
          <div 
            key={tariff.id}
            className={`${styles.tariffCard} ${selectedTariff === tariff.id ? styles.selectedTariff : ''}`}
            onClick={() => setSelectedTariff(tariff.id)}
          >
            <div className={styles.tariffIcon}>{tariff.icon}</div>
            <div className={styles.tariffName}>{tariff.name}</div>
            <div className={styles.tariffPrice}>{tariff.price}‚ÇΩ</div>
            <div className={styles.tariffTime}>{tariff.time}</div>
          </div>
        ))}
      </div>

      {/* –°–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã */}
      <div className={styles.paymentContainer}>
        <div className={styles.sectionTitle}>–°–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã</div>
        <div className={styles.paymentMethods}>
          <button 
            className={`${styles.paymentButton} ${paymentMethod === 'cash' ? styles.activePayment : ''}`}
            onClick={() => setPaymentMethod('cash')}
          >
            –ù–∞–ª–∏—á–Ω—ã–µ
          </button>
          <button 
            className={`${styles.paymentButton} ${paymentMethod === 'card' ? styles.activePayment : ''}`}
            onClick={() => setPaymentMethod('card')}
          >
            –ö–∞—Ä—Ç–æ–π
          </button>
        </div>
      </div>

      {/* –ü–æ–∂–µ–ª–∞–Ω–∏—è */}
      <div className={styles.requestsContainer}>
        <div className={styles.sectionTitle}>–ü–æ–∂–µ–ª–∞–Ω–∏—è</div>
        <div className={styles.requestsGrid}>
          {specialOptions.map(option => (
            <div 
              key={option.id}
              className={`${styles.requestOption} ${specialRequests.includes(option.id) ? styles.selectedRequest : ''}`}
              onClick={() => toggleSpecialRequest(option.id)}
            >
              {option.name} +{option.price}‚ÇΩ
            </div>
          ))}
        </div>
      </div>

      {/* –ö–Ω–æ–ø–∫–∞ –∑–∞–∫–∞–∑–∞ */}
      <button 
        className={styles.orderButton}
        onClick={handleOrder}
      >
        –ó–∞–∫–∞–∑–∞—Ç—å —Ç–∞–∫—Å–∏
      </button>
    </div>
  );
}